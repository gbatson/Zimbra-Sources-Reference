#
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010 Zimbra, Inc.
# 
# The contents of this file are subject to the Zimbra Public License
# Version 1.3 ("License"); you may not use this file except in
# compliance with the License.  You may obtain a copy of the License at
# http://www.zimbra.com/license.
# 
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied.
# ***** END LICENSE BLOCK *****

label = Google\ufffd\u07a5\u00e5\ufffd
description = Google\ufffd\u07a5\u00e5\u05e4\ufffd\u02b9\ufffd\u00e4\ufffd\ufffd\ufffd\u05e1\ufffd\ufffd\ufffd\u03e5\ufffd\ufffd\u9964\ufffd\u0224\ufffd\ufffd\u01a5\u05e5\ufffd\u04e5\ufffd`\ufffd\ufffd\ufffd\u07a4\ufffd\ufffd\ufffd

##########################################################################################
# define the map display language

mapLanguage=



###########################################################################################
#completeAddressRegex - Contains RegEx to uniquely match an address. 
#
#If this is not blank, the zimlet uses: completeAddressRegex
#If this is blank, then the Zimlet uses: addressFirstPartRegEx AND (zipCodeRegEx OR countryNameRegEx)
#
#PS: In most non-english speaking countries(like Japanese), just populating this should be enough.
###########################################################################################
completeAddressRegex = [\u6771\u5927\u795E\u611B\u57FC\u5343\u5317\u5175\u798F\u9759\u8328\u5E83\u4EAC\u65B0\u5BAE\u9577\u5C90\u7FA4\u6803\u5CA1\u4E09\u718A\u9E7F\u5C71\u9752\u5948\u5CA9\u6ECB\u6C96\u77F3\u79CB\u5BCC\u548C\u9999\u4F50\u5FB3\u9AD8\u5CF6\u9CE5]\\W{1,2}[\u90FD\u9053\u5E9C\u770C](\\W+[\u90E1\u5E02\u533A\u753A\u6751\u5CF6]){1,2}\\W{1,20}([\\d\uFF10\uFF11\uFF12\uFF13\uFF14\uFF15\uFF16\uFF17\uFF18\uFF19]+([?\u2015\uFF0D\u30FC-]|\u4E01\u76EE|\u756A\u5730|\u756A|\u53F7)?)*


###########################################################################################
#addressFirstPartRegEx is the regex to match the main/first part of the address *excluding* Zip code or countryName)
#This will be concatinated with zipCodeRegEx(to include zipcodes and then with countryNameRegEx(to include countrynames, as
# at times zipcodes will be missing but only country names are available).
#Matches a word with numbers followed by up to 9 words. PS: This will be concatinated with zipCodeRegEx.
#E.x. 1500 fashion island blvd, suite 200
###########################################################################################
addressFirstPartRegEx = (\\d-?)+,?\\s((\\w?\\.?\\,?\\#?)+\\s){2,9}

###########################################################################################
#zipCodeRegEx allows matching zip codes.
#
# Internally Zimlet will load all the regexes in the following fashion:
# "mainAddressRegEx AND (zipCodeRegEx OR countryNameRegEx)"
#
###########################################################################################


#The following matches US Zip codes
#  (\\d{5,7}(-\\d{4,5})?)
#The following matches Canadian and EU zip codes which is 2, 3-letters alpha-numeric words  for example: "7L7 T2E"
#(([a-zA-Z]{1,2}\\d{1,2}[a-zA-Z]{1,2}\\s?)|(\\d{1,2}[a-zA-Z]{1,2}\\d{1,2}\\s?))+

zipCodeRegEx = (\\d{5,7}(-\\d{4,5})?)|(([a-zA-Z]{1,2}\\d{1,2}[a-zA-Z]{1,2}\\s?)|(\\d{1,2}[a-zA-Z]{1,2}\\d{1,2}\\s?))+


#Matches Country names. Used instead of zip code and when they are missing.
countryNameRegEx = (Austria|Belgium|Bulgaria|Croatia|CzechRepublic|Denmark|Finland|France|Germany|Hungary|Ireland|Italy|Netherlands|Norway|Poland|Portugal|Romania|Russia|Spain|Sweden|Switzerland|UK|Canada|USA)


###########################################################################################
# skipRegEx: These are the words, seperated by |, that are commonly used with numbers. 
# To match addresses of various countries we need to make the regular expression very generic
# and might match non-addresses as well.
#
#For example, both of the following are considered addresses: 
# "2500 fashion island blvd, san mateo, ca 94403" is an address.
# "2500 major bugs found in Zimbra, out of 94403 bugs" is NOT an address.
#
# So we have the following commonly used words like: "out of" or "as many" etc to ignore after
# we have matched.
#When translating, please use what ever words or set of words that's commonly used with numbers
# and seperate them with "|"
#You can leave it blank if there are no such words.
###########################################################################################

skipRegex = of which|as many|out of|none of|little as|where as

###########################################################################################
# clear string
# the string which is dirty in matched address, and need to be cleaned.
#
clearString =